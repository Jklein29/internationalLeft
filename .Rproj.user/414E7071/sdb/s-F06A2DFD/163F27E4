{
    "collab_server" : "",
    "contents" : "# Load packages & data\n\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(ggrepel)\nlibrary(survey)\nlibrary(rvest)\nlibrary(plyr)\nlibrary(broom)\nlibrary(knitr)\nlibrary(RCurl)\nlibrary(stargazer)\nlibrary(reshape2)\nlibrary(gridExtra)\nlibrary(ggiraph)\nlibrary(colorspace)\nlibrary(wCorr)\n\nurl <- getURL(\"https://raw.githubusercontent.com/jordan-klein/internationalLeft/master/W_EVS_clean.csv\")\nW_EVS <- read.csv(text = url)\n\ncw_list <- W_EVS %>% dlply('country_wave')\n\n# Create coefficient matrix\n\nlapply(cw_list, function(x) {\n  filter(x, !is.na(self_ideo) & !is.na(ec_ideo))\n}) %>% \n  .[sapply(., function(x) {\n    dim(x)[1] > 0\n  })] %>% \n  lapply(function(x) {\n    corr <- weightedCorr(x$ec_ideo, x$self_ideo, \"Pearson\", x$S017)\n    return(data.frame(s_id_econ = corr))\n  }) %>% \n  do.call(rbind.data.frame, .) %>% \n  data.frame(country_wave = row.names(.), .) -> s_id_econ\n\nlapply(cw_list, function(x) {\n  filter(x, !is.na(self_ideo) & !is.na(RacRes_n))\n}) %>% \n  .[sapply(., function(x) {\n    dim(x)[1] > 0\n  })] %>% \n  lapply(function(x) {\n    corr <- weightedCorr(x$RacRes_n, x$self_ideo, \"Pearson\", x$S017)\n    return(data.frame(s_id_rac = corr))\n  }) %>% \n  do.call(rbind.data.frame, .) %>% \n  data.frame(country_wave = row.names(.), .) -> s_id_rac\n\nid_ec_rac <- inner_join(s_id_econ, s_id_rac)\n\ncombined <- sort(union(levels(W_EVS$country_wave), levels(id_ec_rac$country_wave)))\n\nleft_join(mutate(id_ec_rac, country_wave = factor(country_wave, levels = combined)), \n          mutate(unique(dplyr::select(W_EVS, country_wave, country, S020)), \n                 country_wave = factor(country_wave, levels = combined))) -> id_ec_rac\n\n## Create separate variables for each wave\n\nid_list <- id_ec_rac %>% dlply(\"country\")\n\nlapply(id_list, function(x) {\n  return(data.frame(wave_no = seq(1:nrow(x)), country_wave = x[1]))\n}) %>% \n  do.call(rbind.data.frame, .) %>% \n  left_join(id_ec_rac, .) -> id_ec_rac\n\nselect(id_ec_rac, s_id_econ, wave_no, country) %>% \n  spread(wave_no, s_id_econ) -> econ_waves \n\nnames(econ_waves) <- c(\"country\", \"id_ec_1\", \"id_ec_2\", \"id_ec_3\", \n                       \"id_ec_4\", \"id_ec_5\", \"id_ec_6\")\n\nselect(id_ec_rac, s_id_rac, wave_no, country) %>% \n  spread(wave_no, s_id_rac) -> rac_waves \n\nnames(rac_waves) <- c(\"country\", \"id_rac_1\", \"id_rac_2\", \"id_rac_3\", \n                      \"id_rac_4\", \"id_rac_5\", \"id_rac_6\")\n\nselect(id_ec_rac, country_wave, wave_no, country) %>% \n  spread(wave_no, country_wave) -> c_waves\n\nnames(c_waves) <- c(\"country\", \"wav_1\", \"wav_2\", \"wav_3\", \"wav_4\", \"wav_5\", \"wav_6\")\n\nleft_join(id_ec_rac, econ_waves) %>% \n  left_join(rac_waves) %>% \n  left_join(c_waves) -> id_viz\n\nid_viz <- id_viz %>% mutate(country = droplevels(country))\n\n# UI\n\nui <- fluidPage(\n  titlePanel(\"Correlation of Economic Ideology vs. Racial Resentment with Ideological Self-Placement\"), \n  sidebarLayout(position = \"right\", \n                sidebarPanel(\n                  checkboxGroupInput(\"checkGroup\", label = \"Country\", \n                                     choices = levels(id_viz$country), selected = levels(id_viz$country)), \n                  width = 2), \n                mainPanel(ggiraphOutput(\"plot\"), width = 10))\n)\n\n# Server\n\nserver <- function(input, output) {\n  \n  plot_data <- reactive({\n    dat <- filter(id_viz)\n    if (is.null(dat))\n      return(NULL)\n    if (!is.null(input$checkGroup))\n      dat <- dat[dat$country %in% input$checkGroup, ]\n    \n    return(dat)\n  })\n  \n  output$plot <- renderggiraph({\n    plot_data() %>% \n      ggplot(aes(x = s_id_econ, y = s_id_rac, color = country)) + \n      geom_point_interactive(aes(x = id_ec_1, y = id_rac_1, tooltip = wav_1)) + \n      geom_point_interactive(aes(x = id_ec_2, y = id_rac_2, tooltip = wav_2)) + \n      geom_point_interactive(aes(x = id_ec_3, y = id_rac_3, tooltip = wav_3)) +\n      geom_point_interactive(aes(x = id_ec_4, y = id_rac_4, tooltip = wav_4)) +\n      geom_point_interactive(aes(x = id_ec_5, y = id_rac_5, tooltip = wav_5)) +\n      geom_point_interactive(aes(x = id_ec_6, y = id_rac_6, tooltip = wav_6)) +\n      geom_segment(aes(x = id_ec_1, y = id_rac_1, \n                       xend = id_ec_2, yend = id_rac_2), \n                   arrow = arrow(length = unit(.1, \"inches\"))) + \n      geom_segment(aes(x = id_ec_2, y = id_rac_2, \n                       xend = id_ec_3, yend = id_rac_3), \n                   arrow = arrow(length = unit(.1, \"inches\"))) + \n      geom_segment(aes(x = id_ec_3, y = id_rac_3, \n                       xend = id_ec_4, yend = id_rac_4), \n                   arrow = arrow(length = unit(.1, \"inches\"))) + \n      geom_segment(aes(x = id_ec_4, y = id_rac_4, \n                       xend = id_ec_5, yend = id_rac_5), \n                   arrow = arrow(length = unit(.1, \"inches\"))) + \n      geom_segment(aes(x = id_ec_5, y = id_rac_5, \n                       xend = id_ec_6, yend = id_rac_6), \n                   arrow = arrow(length = unit(.1, \"inches\"))) + \n      scale_color_manual(values = c(rainbow_hcl(length(unique(id_viz$country)))), \n                         name = \"Country\", drop = F) +\n      labs(caption = \"Scatterplot with trends over time\") +\n      scale_x_continuous(\"Correlation of economic ideology with self-placement\", breaks = c(-.1, 0, .1, .2, .3, .4, .5, .6)) + \n      scale_y_continuous(\"Correlation of racial resentment with self-placement\", breaks = c(-.1, 0, .1, .2, .3, .4)) + \n      theme(axis.title.x = element_text(size = 15), axis.title.y = element_text(size = 15), \n            legend.title = element_text(size = 10), legend.text = element_text(size = 8), \n            legend.key.size = unit(.1, \"inches\")) + \n      coord_cartesian(xlim = c(-.15, .65), ylim = c(-.15, .4)) -> gg_plot    \n    \n    girafe(code = print(gg_plot), width_svg = 14, height_svg = 7)\n  })\n  \n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\n",
    "created" : 1556042789449.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2952894592",
    "id" : "163F27E4",
    "lastKnownWriteTime" : 1556152336,
    "last_content_update" : 1556152336229,
    "path" : "~/Documents/WVS/wave_ideos/app.R",
    "project_path" : "wave_ideos/app.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}