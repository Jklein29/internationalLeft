{
    "collab_server" : "",
    "contents" : "# Load packages & data\n\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(ggrepel)\nlibrary(survey)\nlibrary(rvest)\nlibrary(plyr)\nlibrary(broom)\nlibrary(knitr)\nlibrary(RCurl)\nlibrary(stargazer)\nlibrary(reshape2)\n\nurl <- getURL(\"https://raw.githubusercontent.com/jordan-klein/internationalLeft/master/W_EVS_clean.csv\")\nW_EVS <- read.csv(text = url)\n\nfilter(W_EVS, !is.na(RacRes_n) & !is.na(X003) & !is.na(edu)) %>% \n  mutate(country = droplevels(country)) %>% \n  mutate(S020 = factor(S020, levels = c(as.character(sort(unique(S020)))))) -> W_EVS\n\n# Define UI\n\nui <- navbarPage(\"Model selection\", \n                 tabPanel(\"Not adjusted for education\", \n                          titlePanel(\"Age and Racial Resentment\"), \n                          sidebarLayout(position = \"right\", \n                                        sidebarPanel(\n                                          selectInput(\"country1\", label = \"Country\", \n                                                      choices = levels(W_EVS$country), \n                                                      selected = \"United States\")), \n                                        mainPanel(plotOutput(\"n_edu_plot\")))), \n                 tabPanel(\"Adjusted for education\", \n                          titlePanel(\"Age and Racial Resentment\"),\n                          sidebarLayout(position = \"right\", \n                                        sidebarPanel(\n                                          selectInput(\"country2\", label = \"Country\", \n                                                      choices = levels(W_EVS$country), \n                                                      selected = \"United States\")), \n                                        mainPanel(plotOutput(\"edu_plot\")))))\n\n# Define server\n\nserver <- function(input, output) {\n  \n  filter1 <- reactive({\n    filter(W_EVS) %>% \n      filter(country == input$country1)\n  })\n  \n  output$n_edu_plot <- renderPlot({\n    filter1() %>% \n      ggplot(aes(x = X003, y = RacRes_n, colour = S020)) + \n      geom_smooth(method = \"glm\", aes(weight = S017)) + \n      labs(caption = \"Linear regression plots stratified by survey wave\", colour = \"Survey wave (year)\") + \n      scale_x_continuous(\"Age (years)\", breaks = c(0, 20, 40, 60, 80, 100, 120)) + \n      scale_y_continuous(\"Racial Resentment (low to high)\", breaks = c(0, .25, .5, .75, 1)) + \n      theme(axis.title.x = element_text(size = 15), axis.title.y = element_text(size = 15)) + \n      coord_cartesian(xlim = c(20, 80), ylim = c(0, 1)) \n  })\n  \n  filter2 <- reactive({\n    filter(W_EVS) %>% \n      filter(country == input$country2)\n  })\n  \n  output$edu_plot <- renderPlot({\n    filter2() %>% \n      ggplot(aes(x = resid(lm(X003 ~ edu, weights = S017)), \n                 y = resid(lm(RacRes_n ~ edu, weights = S017)), colour = S020)) + \n      geom_smooth(method = \"glm\") + \n      labs(caption = \"Partial multiple linear regression plots adjusted for education, stratified by survey wave\", \n           colour = \"Survey wave (year)\") + \n      scale_x_continuous(\"Age (young to old, residuals)\", breaks = c(-45, -30, -15, 0, 15, 30, 45)) + \n      scale_y_continuous(\"Racial Resentment (low to high, residuals)\", breaks = c(-.5, -.25, 0, .25, .5)) + \n      theme(axis.title.x = element_text(size = 15), axis.title.y = element_text(size = 15)) + \n      coord_cartesian(xlim = c(-30, 30), ylim = c(-.5, .5)) \n  })\n  \n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\n",
    "created" : 1555539277979.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3005305418",
    "id" : "A749244E",
    "lastKnownWriteTime" : 1555539340,
    "last_content_update" : 1555539340572,
    "path" : "~/Documents/WVS/rac_age/app.R",
    "project_path" : "rac_age/app.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}