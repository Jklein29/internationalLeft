{
    "collab_server" : "",
    "contents" : "# Load packages & data\n\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(ggrepel)\nlibrary(survey)\nlibrary(rvest)\nlibrary(plyr)\nlibrary(broom)\nlibrary(knitr)\nlibrary(RCurl)\nlibrary(devtools)\nlibrary(ggiraph)\nlibrary(ggiraphExtra)\nlibrary(MASS)\nlibrary(car)\nlibrary(reshape2)\n\nurl_og <- getURL(\"https://raw.githubusercontent.com/jordan-klein/internationalLeft/master/WVS_viz_vars.csv\")\nW_EVS_og <- read.csv(text = url_og)\n\nW_EVS_og <- W_EVS_og %>% mutate(RacRes = case_when(rac_ideo == 0 ~ \"Very low\", \n                                                   rac_ideo > 0 & rac_ideo <= .25 ~ \"Low\", \n                                                   rac_ideo > .25 & rac_ideo <= .5 ~ \"Moderate\", \n                                                   rac_ideo > .5 & rac_ideo <= .75 ~ \"High\", \n                                                   rac_ideo > .75 ~ \"Very high\")) %>% \n  mutate(RacRes = factor(RacRes, levels = c(\"Very low\", \"Low\", \"Moderate\", \"High\", \"Very high\")))\n\nW_EVS_og <- W_EVS_og %>% mutate(RacRes_n = case_when(RacRes == \"Very low\" ~ 0, \n                                                     RacRes == \"Low\" ~ .25, RacRes == \"Moderate\" ~ .5, \n                                                     RacRes == \"High\" ~ .75, RacRes == \"Very high\" ~ 1))\n\nW_EVS_og <- W_EVS_og %>% filter(!is.na(ec_ideo) & !is.na(RacRes_n) & !is.na(edu) & !is.na(relig))\n\nurl <- getURL(\"https://raw.githubusercontent.com/jordan-klein/internationalLeft/master/W_EVS_clean.csv\")\nW_EVS <- read.csv(text = url)\n\nfilter(W_EVS, !is.na(ec_ideo) & !is.na(RacRes_n) & !is.na(edu) & !is.na(relig) & !is.na(generation)) %>% \n  mutate(country_wave = droplevels(country_wave)) -> W_EVS\n\ncw_list <- W_EVS %>% dlply('country_wave')\n\nlapply(cw_list, function(x) {\n  table(x$generation) < 50\n}) %>% \n  do.call(rbind, .) %>% \n  melt() -> gen_index\n\nleft_join(W_EVS, gen_index, by = c(\"country_wave\" = \"Var1\", \"generation\" = \"Var2\")) %>% \n  filter(value == F) -> W_EVS\n\n# Create racial resentment factor variable\n\nui <- navbarPage(\"Model selection\", \n                 tabPanel(\"Most recent wave since 2008\", \n                          titlePanel(\"Economic Ideology and Racial Resentment\"), \n                          sidebarLayout(position = \"right\", \n                                        sidebarPanel(\n                                          selectInput(\"og_country\", label = \"Country\", \n                                                      choices = levels(W_EVS_og$country), \n                                                      selected = \"United States\")), \n                                        mainPanel(plotOutput(\"og_plot\")))), \n                 tabPanel(\"All waves, stratified by generation\", \n                          titlePanel(\"Economic Ideology and Racial Resentment\"),\n                          sidebarLayout(position = \"right\", \n                                        sidebarPanel(\n                                          selectInput(\"country_wave\", label = \"Country & survey year\", \n                                                      choices = levels(W_EVS$country_wave), \n                                                      selected = \"United States 2011\")), \n                                        mainPanel(plotOutput(\"strat_plot\")))))\n\n# Define server\n\nserver <- function(input, output) {\n  \n  og_filter <- reactive({\n    filter(W_EVS_og) %>% \n      filter(country == input$og_country)\n      })\n  \n  output$og_plot <- renderPlot({\n    og_filter() %>% \n      ggplot(aes(x = resid(lm(ec_ideo ~ edu + relig, weights = S017)), \n                 y = resid(lm(RacRes_n ~ edu + relig, weights = S017)))) + \n      geom_smooth(method = \"glm\", color = \"darkblue\") + \n      labs(caption = \"Partial multiple linear regression plots adjusted for education and religion\") + \n      scale_x_continuous(\"Economic Ideology (left to right, residuals)\", breaks = c(-.4, -.2, 0, .2, .4)) + \n      scale_y_continuous(\"Racial Resentment (low to high, residuals)\", breaks = c(-.4, -.2, 0, .2, .4)) + \n      theme(axis.title.x = element_text(size = 15), axis.title.y = element_text(size = 15)) + \n      coord_cartesian(xlim = c(-.4, .4), ylim = c(-.4, .4))\n  })\n    \n    strat_filter <- reactive({\n      filter(W_EVS) %>% \n        filter(country_wave == input$country_wave)\n    })\n    \n    output$strat_plot <- renderPlot({\n      strat_filter() %>% \n        ggplot(aes(x = resid(lm(ec_ideo ~ edu + relig, weights = S017)), \n                   y = resid(lm(RacRes_n ~ edu + relig, weights = S017)), colour = generation)) + \n        geom_smooth(method = \"glm\") + \n        labs(caption = \"Partial multiple linear regression plots adjusted for education and religion, stratified by generation\", \n             colour = \"Generation (years born)\") + \n        scale_x_continuous(\"Economic Ideology (left to right, residuals)\", breaks = c(-.4, -.2, 0, .2, .4)) + \n        scale_y_continuous(\"Racial Resentment (low to high, residuals)\", breaks = c(-.4, -.2, 0, .2, .4)) + \n        theme(axis.title.x = element_text(size = 15), axis.title.y = element_text(size = 15)) + \n        coord_cartesian(xlim = c(-.4, .4), ylim = c(-.4, .4)) + \n        scale_color_discrete(breaks = c(\"Greatest\", \"Silent\", \"Boomers\", \"Gen X\", \"Millennials\"), \n                             labels = c(\"Greatest (pre-1928)\", \"Silent (1928-1945)\", \"Boomers (1946-1964)\", \n                                        \"Gen X (1965-1980)\", \"Millennials (1981-1996)\"))\n      \n  })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\n",
    "created" : 1555539679575.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3695089215",
    "id" : "914C6910",
    "lastKnownWriteTime" : 1555542844,
    "last_content_update" : 1555542844058,
    "path" : "~/Documents/WVS/WVS_EVS_viz/app.R",
    "project_path" : "WVS_EVS_viz/app.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}